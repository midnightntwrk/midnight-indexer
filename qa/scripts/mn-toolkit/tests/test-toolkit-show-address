#!/bin/bash

set -e

function test_environment_addresses() {
    local ENV=$1
    local SEED="0000000000000000000000000000000000000000000000000000000000000001"
    
    echo "Testing $ENV environment..."
    
    # Start the toolkit for this environment
    bash scripts/toolkit-start $ENV $NODE_TAG
    
    # Get addresses as JSON and parse with jq
    ADDRESSES_JSON=$(bash scripts/toolkit-show-address $SEED)
    SHIELDED_ADDR=$(echo "$ADDRESSES_JSON" | jq -r '.shielded')
    UNSHIELDED_ADDR=$(echo "$ADDRESSES_JSON" | jq -r '.unshielded')
    
    echo "Generated shielded address for $ENV: ${SHIELDED_ADDR:0:30}..."
    if [[ $SHIELDED_ADDR == mn* ]]; then
        echo -e "\033[0;32m✔\033[0m The generated shielded address is valid"
    else    
        echo -e "\033[0;31m✘\033[0m The generated shielded address is invalid"
    fi
    
    echo "Generated unshielded address for $ENV: ${UNSHIELDED_ADDR:0:30}..."
    if [[ $UNSHIELDED_ADDR == mn* ]]; then
        echo -e "\033[0;32m✔\033[0m The generated unshielded address is valid"
    else    
        echo -e "\033[0;31m✘\033[0m The generated unshielded address is invalid"
    fi
    
    echo ""
    
    # Cleanup this environment
    bash scripts/toolkit-cleanup
}

# Test each environment one at a time
test_environment_addresses "undeployed"
test_environment_addresses "nodedev01"
test_environment_addresses "devnet"
test_environment_addresses "testnet02"

echo "All addresses are valid (note, this is not valid in the bech32m format)"